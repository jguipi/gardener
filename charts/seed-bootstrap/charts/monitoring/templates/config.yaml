apiVersion: v1
kind: ConfigMap
metadata:
  name: seed-prometheus-config
  namespace: {{ .Release.Namespace }}
data:
  prometheus.yaml: |

    global:
      evaluation_interval: 1m
      scrape_interval: 1m

    scrape_configs:
    - job_name: extensions
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_pod_annotation_prometheus_io_scrape
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        regex: extension-(.+);true;(.+)
        action: keep
      - source_labels:
        - __address__
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [ __meta_kubernetes_namespace ]
        target_label: namespace
      - source_labels: [ __meta_kubernetes_pod_name ]
        target_label: pod

    - job_name: garden
      scheme: https
      tls_config:
        insecure_skip_verify: true
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_namespace
        - __meta_kubernetes_pod_annotation_prometheus_io_scrape
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        regex: garden;true;(.+)
        action: keep
      - source_labels:
        - __meta_kubernetes_pod_annotation_prometheus_io_scheme
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels:
        - __address__
        - __meta_kubernetes_pod_annotation_prometheus_io_port
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [ __meta_kubernetes_namespace ]
        target_label: namespace
      - source_labels: [ __meta_kubernetes_pod_name ]
        target_label: pod

    - job_name: cadvisor
      honor_timestamps: false
      metrics_path: /federate
      honor_labels: true
      params:
        'match[]':
        - '{job="cadvisor",namespace=~"extension-(.+)"}'
        - '{job="cadvisor",namespace="garden"}'
        - '{job="cadvisor",namespace=~"istio-(.+)"}'
        - '{job="cadvisor",namespace="kube-system"}'
        - '{__name__="ALERTS"}'
      static_configs:
      - targets:
        - prometheus-web.garden.svc
      metric_relabel_configs:
{{ include "prometheus.keep-metrics.metric-relabel-config" .Values.allowedMetrics.cadvisor | indent 6 }}

    - job_name: kube-state-metrics
      # Service is used, because we only care about metric from one kube-state-metrics instance
      # and not multiple in HA setup
      kubernetes_sd_configs:
      - role: service
        namespaces:
          names: [ garden ]
      relabel_configs:
      - source_labels: [ __meta_kubernetes_service_label_component ]
        regex: kube-state-metrics
        action: keep
      - source_labels: [ __meta_kubernetes_service_port_name ]
        regex: metrics
        action: keep
      - target_label: instance
        replacement: kube-state-metrics
      metric_relabel_configs:
      - source_labels: [ namespace ]
        regex: shoot-.+
        action: drop

    - job_name: prometheus
      static_configs:
      - targets: [ localhost:9090 ]

    - job_name: vpa-recommender
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_label_app]
        regex: vpa-recommender
        action: keep
      - source_labels: [__meta_kubernetes_pod_container_port_name]
        regex: metrics
        action: keep
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [ __meta_kubernetes_namespace ]
        target_label: namespace
      - source_labels: [ __meta_kubernetes_pod_name ]
        target_label: pod

    - job_name: 'gardener-resource-manager'
      kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names: [ garden ]
      relabel_configs:
        - source_labels:
            - __meta_kubernetes_service_name
            - __meta_kubernetes_endpoint_port_name
            - __meta_kubernetes_namespace
          action: keep
          regex: gardener-resource-manager;metrics;garden
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [ __meta_kubernetes_pod_name ]
          target_label: pod
        - source_labels: [ __meta_kubernetes_namespace ]
          target_label: namespace
